{"version":3,"file":"gondel.es5.min.js","sources":["GondelPluginUtils.js","GondelEventEmitter.js","GondelComponentStarter.js","GondelComponentRegistry.js","GondelAutoStart.js","GondelDomUtils.js","GondelEventRegistry.js","GondelDecorators.js","GondelComponent.js"],"sourcesContent":["var basePluginListener = function (result, data, next) { return next(result); };\r\n// Global plugin events registry\r\nvar pluginEventRegistry = window.__gondelPluginEvents || { pluginMapping: {}, pluginEvents: {} };\r\nwindow.__gondelPluginEvents = pluginEventRegistry;\r\n/** Global Plugin Event Handler Registry */\r\nexport var pluginEvents = pluginEventRegistry.pluginEvents;\r\n// Mapping to track if plugin was already registered to prevent double registrations\r\nvar pluginMapping = pluginEventRegistry.pluginMapping;\r\nexport function fireGondelPluginEvent(eventName, initialValue, data, callback) {\r\n    var isSyncron = false;\r\n    var callbackResult;\r\n    // Execute all bound events for the given name\r\n    // if they exist\r\n    (pluginEvents[eventName] || basePluginListener)(initialValue, data, function (processedResult) {\r\n        isSyncron = true;\r\n        callbackResult = callback ? callback(processedResult) : processedResult;\r\n    });\r\n    // Add a guard to prevent asyncron plugin listeners\r\n    // to simplify the usage of fireGondelPluginEvent\r\n    if (!isSyncron) {\r\n        throw new Error(\"Async plugin listener\");\r\n    }\r\n    return callbackResult;\r\n}\r\n/**\r\n * Fire an async event which allows gondel plugins to add features to gondel\r\n */\r\nexport function fireAsyncGondelPluginEvent(eventName, initialValue, data) {\r\n    return new Promise(function (resolve) {\r\n        (pluginEvents[eventName] || basePluginListener)(initialValue, data, function (result) {\r\n            resolve(result);\r\n        });\r\n    });\r\n}\r\n/**\r\n * Allow plugins to hook into the gondel event system\r\n */\r\nexport function addGondelPluginEventListener(pluginName, eventName, eventListenerCallback) {\r\n    // Prevent any event registration if this pluginHandlerName\r\n    // has already been used\r\n    var pluginHandlerNamePerEvent = eventName + \"#\" + pluginName;\r\n    if (pluginMapping[pluginHandlerNamePerEvent]) {\r\n        return;\r\n    }\r\n    // Flag plugin as registered\r\n    pluginMapping[pluginHandlerNamePerEvent] = true;\r\n    // Ensure that an entry for the given event name exists\r\n    if (!pluginEvents[eventName]) {\r\n        pluginEvents[eventName] = basePluginListener;\r\n    }\r\n    var previousEventHandler = pluginEvents[eventName];\r\n    pluginEvents[eventName] = function wrapCallback(result, data, next) {\r\n        previousEventHandler(result, data, function callNextPlugin(modifiedResult, _, firstNext) {\r\n            eventListenerCallback(modifiedResult, data, function bindData(result) {\r\n                next(result, data, firstNext);\r\n            });\r\n        });\r\n    };\r\n}\r\n//# sourceMappingURL=GondelPluginUtils.js.map","import { getFirstDomNode } from \"./GondelDomUtils\";\r\n/**\r\n * Submit an event which might be caught by foreign gondel, angular or react components\r\n */\r\nexport function triggerPublicEvent(eventName, gondelComponent, target, eventData, canBubble) {\r\n    if (eventData === void 0) { eventData = {}; }\r\n    if (canBubble === void 0) { canBubble = true; }\r\n    var event = document.createEvent(\"Event\");\r\n    var eventTarget = target ? getFirstDomNode(target) : gondelComponent._ctx;\r\n    if (eventName[0] !== gondelComponent._namespace) {\r\n        throw new Error(\"Invalid event name '\" +\r\n            eventName +\r\n            \"' - use '\" +\r\n            gondelComponent._namespace +\r\n            eventName.charAt(0).toUpperCase() +\r\n            eventName.slice(1) +\r\n            \"'\");\r\n    }\r\n    event.initEvent(eventName, canBubble, true);\r\n    event.data = {\r\n        component: gondelComponent,\r\n        name: gondelComponent._componentName,\r\n        namespace: gondelComponent._namespace,\r\n        eventData: eventData\r\n    };\r\n    return eventTarget.dispatchEvent(event);\r\n}\r\n//# sourceMappingURL=GondelEventEmitter.js.map","import { internalGondelAsyncRefAttribute, internalGondelRefAttribute } from \"./GondelDomUtils\";\r\nimport { triggerPublicEvent } from \"./GondelEventEmitter\";\r\nimport { fireGondelPluginEvent } from \"./GondelPluginUtils\";\r\nvar noop = function () { };\r\nvar Deferred = function () {\r\n    var _this = this;\r\n    this.promise = new Promise(function (resolve) {\r\n        _this.resolve = resolve;\r\n    });\r\n};\r\n/**\r\n * Start all components of the gondel component registry\r\n * for the given dom context\r\n */\r\nexport function startComponentsFromRegistry(gondelComponentRegistry, domContext, namespace) {\r\n    // Get an array of all nodes which match the namespace\r\n    var gondelDomNodeList = Array.prototype.slice.call(domContext.querySelectorAll(\"[data-\" + namespace + \"-name]\"));\r\n    if (domContext.hasAttribute(\"data-\" + namespace + \"-name\")) {\r\n        gondelDomNodeList.push(domContext);\r\n    }\r\n    // Remove already booted nodes\r\n    var pristineGondelDomNodes = gondelDomNodeList.filter(function (gondelDomNode) {\r\n        return isPristineGondelDomNode(gondelDomNode, namespace);\r\n    });\r\n    var bootingDeferred = new Deferred();\r\n    // Mark all nodes as booting\r\n    pristineGondelDomNodes.forEach(function (gondelDomNode) {\r\n        attachGondelBootingFlag(gondelDomNode, bootingDeferred.promise, namespace);\r\n    });\r\n    // Create instances\r\n    var gondelComponents = fireGondelPluginEvent(\"boot\", pristineGondelDomNodes, { namespace: namespace }, function (pristineGondelDomNodes) {\r\n        return pristineGondelDomNodes.map(function (gondelDomNode) {\r\n            return constructComponent(gondelDomNode, gondelComponentRegistry, namespace);\r\n        });\r\n    });\r\n    // Get all component names\r\n    var newComponentNames = getNewComponents(gondelComponents, gondelComponentRegistry);\r\n    newComponentNames.forEach(function (componentName) {\r\n        return gondelComponentRegistry.setActiveState(componentName, true);\r\n    });\r\n    // Start all components\r\n    var gondelComponentStartPromise = fireGondelPluginEvent(\"start\", gondelComponents, { newComponentNames: newComponentNames, namespace: namespace, gondelComponentRegistry: gondelComponentRegistry }, function (gondelComponents) {\r\n        // Wait for async started components\r\n        return Promise.all(gondelComponents.map(startConstructedComponent));\r\n    })\r\n        // Let all plugins know that the components are now all ready to use\r\n        .then(function () {\r\n        gondelComponents.forEach(function (gondelComponent) {\r\n            if (gondelComponent.sync) {\r\n                gondelComponent.sync();\r\n            }\r\n        });\r\n        return fireGondelPluginEvent(\"sync\", gondelComponents, { namespace: namespace });\r\n    });\r\n    // Resolve the booting deferred\r\n    gondelComponentStartPromise\r\n        .then(bootingDeferred.resolve, bootingDeferred.resolve)\r\n        // Rethrow errors (if any)\r\n        // otherwise the browser dev tools won't show\r\n        // important bootstrap errors\r\n        .then(function () { return gondelComponentStartPromise; });\r\n    // Return a promise of all started components\r\n    return gondelComponentStartPromise;\r\n}\r\n/**\r\n * Returns true if the given domNode is neither booting nor booted\r\n */\r\nexport function isPristineGondelDomNode(domNode, namespace) {\r\n    return !domNode.hasOwnProperty(internalGondelAsyncRefAttribute + namespace);\r\n}\r\n/**\r\n * Mark the given dom node as controlled by gondel\r\n */\r\nexport function attachGondelBootingFlag(domNode, bootingFlag, namespace) {\r\n    // The name `A` mean async\r\n    // to allow waiting for asyncronous booted components\r\n    domNode[internalGondelAsyncRefAttribute + namespace] = bootingFlag;\r\n}\r\n/**\r\n * Constructs a new component\r\n */\r\nexport function constructComponent(domNode, gondelComponentRegistry, namespace) {\r\n    var componentName = domNode.getAttribute(\"data-\" + namespace + \"-name\");\r\n    var GondelComponent = gondelComponentRegistry.getComponent(componentName);\r\n    if (GondelComponent === undefined) {\r\n        throw new Error(\"Failed to boot component - \" + componentName + \" is not registred\");\r\n    }\r\n    var componentInstance = new GondelComponent(domNode, componentName);\r\n    componentInstance._ctx = domNode;\r\n    componentInstance._namespace = namespace;\r\n    componentInstance._componentName = componentName;\r\n    // Add stop method\r\n    componentInstance.stop = stopStartedComponent.bind(null, componentInstance, componentInstance.stop || noop, namespace);\r\n    // Create a circular reference which will allow access to the componentInstance from ctx\r\n    domNode[\"_gondel_\" + namespace] = componentInstance;\r\n    return componentInstance;\r\n}\r\n/**\r\n * Start a component after it was constructed\r\n */\r\nexport function startConstructedComponent(component) {\r\n    // Skip if the start method is missing\r\n    if (!component.start) {\r\n        return;\r\n    }\r\n    var expectsNoArguments = component.start.length === 0;\r\n    // Start the component and expect a promise or a syncronous return value\r\n    // if the function expects no arguments\r\n    if (expectsNoArguments) {\r\n        return component.start();\r\n    }\r\n    return new Promise(function (resolve, reject) { return component.start(resolve, reject); });\r\n}\r\n/**\r\n * Stops a started component\r\n */\r\nexport function stopStartedComponent(component, internalStopMethod, namespace) {\r\n    triggerPublicEvent(namespace + \"Stop\", component, component._ctx);\r\n    // Remove the component instance from the html element\r\n    delete component._ctx[internalGondelRefAttribute + namespace];\r\n    delete component._ctx[internalGondelAsyncRefAttribute + namespace];\r\n    component._stopped = true;\r\n    fireGondelPluginEvent(\"stop\", component, { namespace: namespace }, internalStopMethod.bind(component));\r\n}\r\n/**\r\n * Filters the given component list and returns the names of those components which have never been started before\r\n */\r\nfunction getNewComponents(components, registry) {\r\n    var componentNameHelper = {};\r\n    components.forEach(function (component) { return (componentNameHelper[component._componentName] = true); });\r\n    var componentNames = Object.keys(componentNameHelper);\r\n    return componentNames.filter(function (componentName) { return !registry._activeComponents[componentName]; });\r\n}\r\n//# sourceMappingURL=GondelComponentStarter.js.map","import { fireGondelPluginEvent } from \"./GondelPluginUtils\";\r\nimport { addRegistryToBootloader } from \"./GondelAutoStart\";\r\nvar GLOBAL_GONDEL_REGISTRY_NAMESPACE = \"__\\ud83d\\udea1Registries\";\r\nvar GondelComponentRegistry = /** @class */ (function () {\r\n    function GondelComponentRegistry() {\r\n        this._components = {};\r\n        this._activeComponents = {};\r\n        this._bootMode = 2 /* onDomReady */;\r\n    }\r\n    GondelComponentRegistry.prototype.registerComponent = function (name, gondelComponent) {\r\n        this._components[name] = gondelComponent;\r\n    };\r\n    GondelComponentRegistry.prototype.unregisterComponent = function (name) {\r\n        delete this._components[name];\r\n    };\r\n    GondelComponentRegistry.prototype.getComponent = function (name) {\r\n        return this._components[name];\r\n    };\r\n    /**\r\n     * Set if a component is used\r\n     */\r\n    GondelComponentRegistry.prototype.setActiveState = function (name, isActive) {\r\n        this._activeComponents[name] = isActive;\r\n    };\r\n    GondelComponentRegistry.prototype.setBootMode = function (bootMode) {\r\n        this._bootMode = bootMode;\r\n    };\r\n    return GondelComponentRegistry;\r\n}());\r\nexport { GondelComponentRegistry };\r\nvar _componentRegistries;\r\nexport function getComponentRegistry(namespace) {\r\n    if (!_componentRegistries) {\r\n        _componentRegistries = window[GLOBAL_GONDEL_REGISTRY_NAMESPACE] || {};\r\n        window[GLOBAL_GONDEL_REGISTRY_NAMESPACE] = _componentRegistries;\r\n    }\r\n    if (!_componentRegistries[namespace]) {\r\n        _componentRegistries[namespace] = new GondelComponentRegistry();\r\n        addRegistryToBootloader(namespace);\r\n    }\r\n    return _componentRegistries[namespace];\r\n}\r\nexport function registerComponent() {\r\n    var args = arguments;\r\n    // The componentName is always the first argument\r\n    var componentName = args[0];\r\n    // Use namespace from the second argument or fallback to the default \"g\" if it is missing\r\n    var namespace = typeof args[1] === \"string\" ? args[1] : \"g\";\r\n    // The last argument is always the component class\r\n    var component = args[args.length - 1];\r\n    var gondelComponentRegistry = getComponentRegistry(namespace);\r\n    // If this component was already registered we remove the previous one\r\n    // and notify all plugins - this is especially usefull for hot component replacement\r\n    if (gondelComponentRegistry.getComponent(componentName)) {\r\n        fireGondelPluginEvent(\"unregister\", component, { componentName: componentName, namespace: namespace });\r\n    }\r\n    // Let plugins know about the new component\r\n    fireGondelPluginEvent(\"register\", component, {\r\n        componentName: componentName,\r\n        namespace: namespace,\r\n        gondelComponentRegistry: gondelComponentRegistry\r\n    }, function (component) {\r\n        gondelComponentRegistry.registerComponent(componentName, component);\r\n    });\r\n}\r\n//# sourceMappingURL=GondelComponentRegistry.js.map","import { getComponentRegistry } from \"./GondelComponentRegistry\";\r\nimport { startComponentsFromRegistry } from \"./GondelComponentStarter\";\r\n/**\r\n * By default Gondel will run startComponents on DOMContentLoaded\r\n * To gain more controll over the boot behaviour tihs function can be called\r\n * to disable the auto start\r\n */\r\nexport function disableAutoStart(namespace) {\r\n    if (namespace === void 0) { namespace = \"g\"; }\r\n    getComponentRegistry(namespace).setBootMode(1 /* manual */);\r\n}\r\n/**\r\n * Wait for document ready and boot the registry\r\n */\r\nexport function addRegistryToBootloader(namespace) {\r\n    // Use new Promise to wait for the next tick\r\n    var boot = function () {\r\n        Promise.resolve().then(function () {\r\n            var gondelComponentRegistry = getComponentRegistry(namespace);\r\n            if (gondelComponentRegistry._bootMode === 2 /* onDomReady */) {\r\n                gondelComponentRegistry.setBootMode(0 /* alreadyBooted */);\r\n                startComponentsFromRegistry(gondelComponentRegistry, document.documentElement, namespace);\r\n            }\r\n        });\r\n    };\r\n    // Boot if document is complete or once it completes\r\n    if (document.readyState == \"complete\") {\r\n        boot();\r\n    }\r\n    else {\r\n        document.addEventListener(\"DOMContentLoaded\", boot, false);\r\n    }\r\n}\r\n//# sourceMappingURL=GondelAutoStart.js.map","import { getComponentRegistry } from \"./GondelComponentRegistry\";\r\nimport { startComponentsFromRegistry } from \"./GondelComponentStarter\";\r\nexport var internalGondelRefAttribute = \"_gondel_\";\r\nexport var internalGondelAsyncRefAttribute = \"_gondelA_\";\r\n/**\r\n * Returns true if the given object is a single Element\r\n */\r\nfunction isElement(domNode) {\r\n    return domNode.nodeType !== undefined;\r\n}\r\n/**\r\n * This function normalizes takes one of the following:\r\n *  + document query result\r\n *  + dom node array\r\n *  + jquery object\r\n *  + a single dom node\r\n * and turns it into a single dom node\r\n */\r\nexport function getFirstDomNode(domNode) {\r\n    if (isElement(domNode)) {\r\n        return domNode;\r\n    }\r\n    return domNode[0];\r\n}\r\n/**\r\n * Start all nodes in the given context\r\n */\r\nexport function startComponents(domContext, namespace) {\r\n    if (namespace === void 0) { namespace = \"g\"; }\r\n    var registry = getComponentRegistry(namespace);\r\n    return startComponentsFromRegistry(registry, domContext ? getFirstDomNode(domContext) : document.documentElement, namespace);\r\n}\r\n/**\r\n * Stop all nodes in the given context\r\n */\r\nexport function stopComponents(domContext, namespace) {\r\n    if (namespace === void 0) { namespace = \"g\"; }\r\n    var components = findComponents(domContext, undefined, namespace);\r\n    if (domContext && hasMountedGondelComponent(domContext)) {\r\n        components.unshift(getComponentByDomNode(domContext));\r\n    }\r\n    components.forEach(function (component) { return component.stop(); });\r\n}\r\n/**\r\n * Checks if a component is mounted on a certain DOM node\r\n */\r\nexport function hasMountedGondelComponent(domNode, namespace) {\r\n    if (namespace === void 0) { namespace = \"g\"; }\r\n    var firstNode = getFirstDomNode(domNode);\r\n    var gondelComponent = firstNode[internalGondelRefAttribute + namespace];\r\n    if (!gondelComponent || !gondelComponent._ctx) {\r\n        // no anchor prop found or ctx missing. function is needed\r\n        // that we can type the `getComponentByDomNode` without possible\r\n        // returnal of undefined.\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Returns the gondel instance for the given HtmlELement\r\n */\r\nexport function getComponentByDomNode(domNode, namespace) {\r\n    if (namespace === void 0) { namespace = \"g\"; }\r\n    var gondelComponent = extractComponent(getFirstDomNode(domNode), namespace);\r\n    if (!gondelComponent) {\r\n        throw new Error(\"Could not find a started gondel component in namespace \\\"\" + namespace + \"\\\",\\nplease check if your component is mounted via 'hasMountedGondelComponent'\");\r\n    }\r\n    return gondelComponent;\r\n}\r\n/**\r\n * Internal helper function of getComponentByDomNode\r\n *\r\n * Returns the gondel instance from a known HtmlElement\r\n * This function is an internal helper with a possible undefined\r\n * return value.\r\n */\r\nexport function extractComponent(element, namespace) {\r\n    var gondelComponent = element[internalGondelRefAttribute + namespace];\r\n    // Stop if this dom node is not known to gondel\r\n    if (gondelComponent && gondelComponent._ctx) {\r\n        return gondelComponent;\r\n    }\r\n}\r\n/**\r\n * Returns the gondel instance for the given HtmlELement once it is booted\r\n */\r\nexport function getComponentByDomNodeAsync(domNode, namespace) {\r\n    if (namespace === void 0) { namespace = \"g\"; }\r\n    var firstNode = getFirstDomNode(domNode);\r\n    var gondelComponent = firstNode[internalGondelAsyncRefAttribute + namespace];\r\n    // Stop if this dom node is not known to gondel\r\n    if (!gondelComponent) {\r\n        return Promise.reject(undefined);\r\n    }\r\n    // or the component is already booted up return it\r\n    if (gondelComponent._ctx) {\r\n        return Promise.resolve(gondelComponent);\r\n    }\r\n    // Wait the component to boot up and return it\r\n    return gondelComponent.then(function () { return firstNode[internalGondelRefAttribute + namespace]; });\r\n}\r\n/**\r\n * Returns all components inside the given node\r\n */\r\nexport function findComponents(domNode, componentName, namespace) {\r\n    if (domNode === void 0) { domNode = document.documentElement; }\r\n    if (namespace === void 0) { namespace = \"g\"; }\r\n    var firstNode = getFirstDomNode(domNode);\r\n    var components = [];\r\n    var attribute = \"_gondel_\" + namespace;\r\n    var nodes = firstNode.querySelectorAll(\"[data-\" + namespace + \"-name\" + (componentName ? \"=\\\"\" + componentName + \"\\\"\" : \"\") + \"]\");\r\n    for (var i = 0; i < nodes.length; i++) {\r\n        var node = nodes[i];\r\n        var gondelComponentInstance = node[attribute];\r\n        // Verify that the component is fully booted\r\n        if (gondelComponentInstance && gondelComponentInstance._ctx === node) {\r\n            components.push(gondelComponentInstance);\r\n        }\r\n    }\r\n    return components;\r\n}\r\n//# sourceMappingURL=GondelDomUtils.js.map","/**\r\n * The event registry provides a way to bind events ahead of time\r\n * with a very small foot print during launch to improve the time to interaction\r\n */\r\nimport { extractComponent } from \"./GondelDomUtils\";\r\nimport { fireGondelPluginEvent } from \"./GondelPluginUtils\";\r\n/**\r\n * Only real browser events are supported.\r\n * Unfortunately focus and blur do not bubble so a special mapping is needed.\r\n */\r\nvar eventNameMapping = {\r\n    focus: \"focusin\",\r\n    blur: \"focusout\"\r\n};\r\n// Polyfill for element.prototype.matches\r\nvar matchesCssSelector = function (element, selector) {\r\n    var elementPrototype = window.Element.prototype;\r\n    /* istanbul ignore next : Browser polyfill can't be tested */\r\n    var elementMatches = elementPrototype.matches ||\r\n        elementPrototype.matchesSelector ||\r\n        elementPrototype.mozMatchesSelector ||\r\n        elementPrototype.msMatchesSelector ||\r\n        elementPrototype.webkitMatchesSelector;\r\n    // Cache the function and call it\r\n    return (matchesCssSelector = function (element, selector) {\r\n        return elementMatches.call(element, selector);\r\n    })(element, selector);\r\n};\r\nfunction getParentElements(startElement) {\r\n    var nodes = [];\r\n    for (var element = startElement; element; element = element.parentElement) {\r\n        nodes.push(element);\r\n    }\r\n    return nodes;\r\n}\r\n/**\r\n * Returns an array of all handlers which would apply for the current target\r\n */\r\nexport function getHandlers(attributeName, eventHandlerRegistry, target) {\r\n    var parents = getParentElements(target);\r\n    // Find all selectors which have been registred for this event type\r\n    // and which have a gondel component in one of the parrent nodes\r\n    var selectorsOfFoundComponents = [];\r\n    parents.forEach(function (parent, i) {\r\n        var componentName = parent.getAttribute(attributeName);\r\n        var handlers = componentName && eventHandlerRegistry[componentName];\r\n        if (handlers) {\r\n            // Store the index where the component was found to know in which part\r\n            // of the dom tree the selectors could be found\r\n            selectorsOfFoundComponents.push({ index: i, handlers: handlers });\r\n        }\r\n    });\r\n    // Iterate over all possible selectors to find out if the current event\r\n    // should fire any gondel handler\r\n    var handlerQueue = [];\r\n    selectorsOfFoundComponents.forEach(function (_a) {\r\n        var index = _a.index, handlers = _a.handlers;\r\n        var selectorNames = Object.keys(handlers);\r\n        selectorNames.forEach(function (selectorName) {\r\n            // If no selector is given the handler does always match\r\n            if (!selectorName) {\r\n                return handlerQueue.push({\r\n                    index: index,\r\n                    ctx: parents[index],\r\n                    target: parents[index],\r\n                    handlerOptions: handlers[selectorName]\r\n                });\r\n            }\r\n            // Iterate backwards over the children of the component to find an element\r\n            // which matches the selector for the current handler\r\n            for (var i = index; --i >= 0;) {\r\n                if (matchesCssSelector(parents[i], selectorName)) {\r\n                    return handlerQueue.push({\r\n                        index: i,\r\n                        ctx: parents[index],\r\n                        target: parents[i],\r\n                        handlerOptions: handlers[selectorName]\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    });\r\n    // Break if we couldn't find any matching element\r\n    if (handlerQueue.length === 0) {\r\n        return [];\r\n    }\r\n    // Sort the queue so events which are further up the dom are fired first\r\n    handlerQueue.sort(function (handlerA, handlerB) {\r\n        return handlerA.index > handlerB.index ? 1 : handlerA.index === handlerB.index ? 0 : -1;\r\n    });\r\n    return handlerQueue;\r\n}\r\n/**\r\n * The handler which will catch every event at the documentElement\r\n */\r\nfunction handleEvent(namespace, attributeName, eventHandlerRegistry, event) {\r\n    var target = event.target;\r\n    var handlers = getHandlers(attributeName, eventHandlerRegistry, target);\r\n    executeHandlers(handlers, event, namespace);\r\n}\r\nvar _domEventRegistry;\r\n/**\r\n * Returns the namespace registry for the given namespace..\r\n * This function must be used only by core or plugins\r\n */\r\nexport function getEventRegistry(namespace) {\r\n    if (!_domEventRegistry) {\r\n        _domEventRegistry = window[\"__\\ud83d\\udea1DomEvents\"] || {};\r\n        window[\"__\\ud83d\\udea1DomEvents\"] = _domEventRegistry;\r\n    }\r\n    if (!_domEventRegistry[namespace]) {\r\n        _domEventRegistry[namespace] = {};\r\n    }\r\n    return _domEventRegistry[namespace];\r\n}\r\n/**\r\n * Notify components\r\n * This function must be used by core or only by plugins\r\n */\r\nexport function executeHandlers(handlers, event, namespace) {\r\n    /** Store wether the original Event was modified to provide the correct currentTarget */\r\n    var eventObjectRequiresCleanup = false;\r\n    /** Store optional callback results which are executed together to allow grouped redraws */\r\n    var results = [];\r\n    var _loop_1 = function (i) {\r\n        var handlerObject = handlers[i];\r\n        var handlerOptions = handlerObject.handlerOptions;\r\n        var gondelComponent = extractComponent(handlerObject.ctx, namespace);\r\n        // Skip if the component wasn't started or if it was stopped\r\n        if (gondelComponent) {\r\n            // See https://stackoverflow.com/questions/52057726/what-is-the-best-way-to-alter-a-native-browser-event\r\n            Object.defineProperty(event, \"currentTarget\", {\r\n                get: function () { return handlerObject.target; },\r\n                configurable: true\r\n            });\r\n            eventObjectRequiresCleanup = true;\r\n            for (var j = 0; j < handlerOptions.length && !event.cancelBubble; j++) {\r\n                var handlerResult = gondelComponent[handlerOptions[j].handlerName].call(gondelComponent, event);\r\n                if (typeof handlerResult === \"function\") {\r\n                    results.push(handlerResult);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    for (var i = 0; i < handlers.length && !event.cancelBubble; i++) {\r\n        _loop_1(i);\r\n    }\r\n    // Execute all callbacks to allow grouping write events\r\n    results.forEach(function (result) {\r\n        result();\r\n    });\r\n    // Cleanup the event object\r\n    if (eventObjectRequiresCleanup) {\r\n        // See https://stackoverflow.com/questions/52057726/what-is-the-best-way-to-alter-a-native-browser-event\r\n        delete event.currentTarget;\r\n    }\r\n}\r\n/**\r\n * Add a event lister to the <html> element\r\n * The listener will always call handleEvent with the domEventRegistry for the given event\r\n */\r\nfunction startListeningForEvent(eventName, namespace) {\r\n    document.documentElement.addEventListener(eventNameMapping[eventName] || eventName, handleEvent.bind(null, namespace, \"data-\" + namespace + \"-name\", getEventRegistry(namespace)[eventName]));\r\n}\r\n/**\r\n * Add an event to the Gondel EventRegistry\r\n */\r\nexport function addRootEventListener(namespace, domEventName, gondelComponentName, handlerName, handlerOption) {\r\n    // Create namespace if neededi\r\n    var namespacedDomEventRegistry = getEventRegistry(namespace);\r\n    // Notify all plugins to allow taking over the event handling for a specific event name\r\n    // This notification is only triggered if a event name e.g. 'click' is used for the first time\r\n    if (!namespacedDomEventRegistry[domEventName]) {\r\n        namespacedDomEventRegistry[domEventName] = {};\r\n        fireGondelPluginEvent(\"registerEvent\", true, {\r\n            eventName: domEventName,\r\n            namespace: namespace,\r\n            eventRegistry: namespacedDomEventRegistry[domEventName]\r\n        }, function (isNativeEvent) {\r\n            // If no plugin registered the event\r\n            // register a native browser event\r\n            if (isNativeEvent) {\r\n                startListeningForEvent(domEventName, namespace);\r\n            }\r\n        });\r\n    }\r\n    if (!namespacedDomEventRegistry[domEventName][gondelComponentName]) {\r\n        namespacedDomEventRegistry[domEventName][gondelComponentName] = {};\r\n    }\r\n    var handlerOptionObject = typeof handlerOption === \"object\" ? handlerOption : { selector: handlerOption };\r\n    var selectorKey = handlerOptionObject.selector || \"\";\r\n    if (!namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey]) {\r\n        namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey] = [];\r\n    }\r\n    namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey].push(Object.assign({ handlerName: handlerName, handlerOption: handlerOption }));\r\n}\r\n/**\r\n * Remove an event from the Gondel EventRegistry\r\n */\r\nexport function removeRootEventListener(namespace, domEventName, gondelComponentName, handlerName, selector) {\r\n    var selectorKey = selector || \"\";\r\n    var namespacedDomEventRegistry = getEventRegistry(namespace);\r\n    if (namespacedDomEventRegistry[domEventName] &&\r\n        namespacedDomEventRegistry[domEventName][gondelComponentName] &&\r\n        namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey]) {\r\n        namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey] = namespacedDomEventRegistry[domEventName][gondelComponentName][selectorKey].filter(function (handlerOption) {\r\n            return handlerOption.handlerName !== handlerName || handlerName === undefined;\r\n        });\r\n    }\r\n}\r\n/**\r\n * Remove all events for a given Component (e.g. a Button) from the Gondel EventRegistry\r\n */\r\nexport function removeRootEventListernerForComponent(namespace, gondelComponentName) {\r\n    var namespacedDomEventRegistry = getEventRegistry(namespace);\r\n    for (var eventName in namespacedDomEventRegistry) {\r\n        /* istanbul ignore else: for in savety check */\r\n        if (namespacedDomEventRegistry.hasOwnProperty(eventName)) {\r\n            delete namespacedDomEventRegistry[eventName][gondelComponentName];\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=GondelEventRegistry.js.map","import { addRootEventListener, removeRootEventListernerForComponent } from \"./GondelEventRegistry\";\r\n// Because of how decorators work @EventListeners is executed before the class is registred\r\n// so we need to provide a hrm compatible approch initialize and reinitialize the events\r\nimport { addGondelPluginEventListener } from \"./GondelPluginUtils\";\r\nimport { registerComponent } from \"./index\";\r\nexport function Component(componentName, namespace) {\r\n    return function (constructor) {\r\n        registerComponent(componentName, namespace, constructor);\r\n    };\r\n}\r\nfunction hookEventDecoratorInCore() {\r\n    addGondelPluginEventListener(\"GondelDecorators\", \"register\", function (component, _a, next) {\r\n        var componentName = _a.componentName, namespace = _a.namespace, gondelComponentRegistry = _a.gondelComponentRegistry;\r\n        // Only apply in case the component is already active in the DOM\r\n        // this will only happen during hot module replacement\r\n        if (!gondelComponentRegistry._activeComponents[componentName]) {\r\n            return next(component);\r\n        }\r\n        // The decorator will store the event information in two different places.\r\n        // For ES6 classes it is using __events\r\n        // For ES5 prototype classes and transpiled ES6 classes it is using prototype.__events\r\n        var componentEventOptions = (component.prototype && component.prototype.__events) || component.__events;\r\n        if (componentEventOptions) {\r\n            componentEventOptions.forEach(function (eventOptions) {\r\n                addRootEventListener(namespace, \r\n                /* event name: */ eventOptions[0], componentName, \r\n                /* handler: */ eventOptions[1], \r\n                /* selector: */ eventOptions[2]);\r\n            });\r\n        }\r\n        next(component);\r\n    });\r\n    addGondelPluginEventListener(\"GondelDecorators\", \"unregister\", function (component, _a, next) {\r\n        var componentName = _a.componentName, namespace = _a.namespace;\r\n        removeRootEventListernerForComponent(namespace, componentName);\r\n        next(component);\r\n    });\r\n    addGondelPluginEventListener(\"GondelDecorators\", \"start\", function (gondelComponents, _a, next) {\r\n        var newComponentNames = _a.newComponentNames, gondelComponentRegistry = _a.gondelComponentRegistry, namespace = _a.namespace;\r\n        newComponentNames.forEach(function (componentName) {\r\n            var gondelComponent = gondelComponentRegistry.getComponent(componentName);\r\n            // The decorator will store the event information in two different places.\r\n            // For ES6 classes it is using __events\r\n            // For ES5 prototype classes and transpiled ES6 classes it is using prototype.__events\r\n            var componentEventOptions = (gondelComponent.prototype && gondelComponent.prototype.__events) ||\r\n                gondelComponent.__events;\r\n            if (componentEventOptions) {\r\n                componentEventOptions.forEach(function (eventOptions) {\r\n                    addRootEventListener(namespace, \r\n                    /* event name: */ eventOptions[0], componentName, \r\n                    /* handler: */ eventOptions[1], \r\n                    /* selector: */ eventOptions[2]);\r\n                });\r\n            }\r\n        });\r\n        next(gondelComponents);\r\n    });\r\n}\r\n/**\r\n * The @EventListener decorator will add all event names to a static variable\r\n */\r\nexport function EventListener(eventName, selector) {\r\n    return function (target, handler) {\r\n        hookEventDecoratorInCore();\r\n        if (handler.substr(0, 1) !== \"_\") {\r\n            throw new Error(\"Invalid handler name '\" + handler + \"' use '_\" + handler + \"' instead.\");\r\n        }\r\n        if (!target.__events) {\r\n            target.__events = [];\r\n        }\r\n        target.__events.push([eventName, handler, selector]);\r\n    };\r\n}\r\n//# sourceMappingURL=GondelDecorators.js.map","var GondelBaseComponent = /** @class */ (function () {\r\n    function GondelBaseComponent(domNode, componentName) {\r\n    }\r\n    /**\r\n     * Stop method\r\n     */\r\n    GondelBaseComponent.prototype.stop = function () { };\r\n    return GondelBaseComponent;\r\n}());\r\nexport { GondelBaseComponent };\r\n//# sourceMappingURL=GondelComponent.js.map"],"names":["basePluginListener","result","data","next","pluginEventRegistry","window","__gondelPluginEvents","pluginMapping","pluginEvents","fireGondelPluginEvent","eventName","initialValue","callback","callbackResult","isSyncron","processedResult","Error","addGondelPluginEventListener","pluginName","eventListenerCallback","pluginHandlerNamePerEvent","previousEventHandler","modifiedResult","_","firstNext","triggerPublicEvent","gondelComponent","target","eventData","canBubble","event","document","createEvent","eventTarget","getFirstDomNode","_ctx","_namespace","charAt","toUpperCase","slice","initEvent","component","name","_componentName","namespace","dispatchEvent","noop","Deferred","_this","this","promise","Promise","resolve","startComponentsFromRegistry","gondelComponentRegistry","domContext","gondelDomNodeList","Array","prototype","call","querySelectorAll","hasAttribute","push","pristineGondelDomNodes","filter","gondelDomNode","domNode","hasOwnProperty","internalGondelAsyncRefAttribute","isPristineGondelDomNode","bootingDeferred","forEach","bootingFlag","attachGondelBootingFlag","gondelComponents","map","componentName","getAttribute","GondelComponent","getComponent","undefined","componentInstance","stop","internalStopMethod","internalGondelRefAttribute","_stopped","bind","constructComponent","newComponentNames","components","registry","componentNameHelper","Object","keys","_activeComponents","getNewComponents","setActiveState","gondelComponentStartPromise","all","startConstructedComponent","then","sync","start","length","reject","_componentRegistries","GLOBAL_GONDEL_REGISTRY_NAMESPACE","GondelComponentRegistry","registerComponent","_components","unregisterComponent","isActive","setBootMode","bootMode","_bootMode","getComponentRegistry","boot","documentElement","readyState","addEventListener","addRegistryToBootloader","args","arguments","nodeType","isElement","hasMountedGondelComponent","getComponentByDomNode","extractComponent","element","findComponents","attribute","nodes","i","node","gondelComponentInstance","_domEventRegistry","eventNameMapping","focus","blur","matchesCssSelector","selector","elementPrototype","Element","elementMatches","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","webkitMatchesSelector","handleEvent","attributeName","eventHandlerRegistry","handlers","eventObjectRequiresCleanup","results","_loop_1","handlerObject","handlerOptions","ctx","defineProperty","get","configurable","j","cancelBubble","handlerResult","handlerName","currentTarget","executeHandlers","parents","startElement","parentElement","getParentElements","selectorsOfFoundComponents","parent","index","handlerQueue","_a","selectorName","sort","handlerA","handlerB","getHandlers","getEventRegistry","addRootEventListener","domEventName","gondelComponentName","handlerOption","namespacedDomEventRegistry","eventRegistry","isNativeEvent","startListeningForEvent","selectorKey","assign","hookEventDecoratorInCore","componentEventOptions","__events","eventOptions","removeRootEventListernerForComponent","GondelBaseComponent","constructor","handler","substr","firstNode","unshift"],"mappings":"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"}